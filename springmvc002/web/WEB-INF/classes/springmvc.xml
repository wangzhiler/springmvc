<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--配置自动扫描的包-->
    <context:component-scan base-package="com.qaqa.springmvc"/>

    <!--配置试图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--
        default-servlet-handler将在SpringMVC上下文中定义一个DefaultServletHttpRequestHandler,
        它会对进入DispatcherServlet的请求进行筛查,如果发现是没有经过映射的请求,就将该请求交由WEB应用服务器默认的Servlet处理.
        如果不是静态资源的请求,才由DispatcherServlet继续处理.

        一般WEB应用服务器默认的Servlet的名称都是default.
        若所使用的WEB服务器的默认Servlet名称不是default,则需要通过default-servlet-name属性显示指定
    -->
    <mvc:default-servlet-handler/>

    <!--这个只能用自带的-->
    <!--<mvc:annotation-driven/>-->

    <mvc:annotation-driven conversion-service="conversionService2"/>

    <!--
        这个只能用自定义的
        class="org.springframework.context.support.ConversionServiceFactoryBean">
    -->

    <!--自定义 自带的都能用-->
    <!--配置ConversionService-->
    <bean id="conversionService2"
        class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <ref bean="employeeConverter"/>
            </set>
        </property>
    </bean>

    <!--配置国际化资源文件-->
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n"/>
    </bean>

    <!--配置SessionLocalResolver-->
    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>

    <!--配置LocaleChanceInterceptor-->
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
    </mvc:interceptors>

    <!-- 配置SessionLocaleResolver用于将Locale对象存储于Session中供后续使用 -->


    <!-- 配置LocaleChangeInterceptor 主要用于获取请求中的locale信息，将期转为Locale对像，获取LocaleResolver对象-->


    <!--
    <mvc:view-controller path="/i18n" view-name="i18n"/>
    -->

    <mvc:view-controller path="/i18n2" view-name="i18n2"/>

</beans>